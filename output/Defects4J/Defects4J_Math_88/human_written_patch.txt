diff -Naur /mnt/benchmarks/bugs/Defects4J/Defects4J_Math_88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java /mnt/benchmarks/bugs/Defects4J/Defects4J_Math_88/fixed-version/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java
--- /mnt/benchmarks/bugs/Defects4J/Defects4J_Math_88/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	2020-03-01 00:22:54.460479046 -0800
+++ /mnt/benchmarks/bugs/Defects4J/Defects4J_Math_88/fixed-version/src/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	2020-03-01 00:22:58.076649438 -0800
@@ -326,19 +326,18 @@
         Integer basicRow =
             getBasicRow(getNumObjectiveFunctions() + getOriginalNumDecisionVariables());
         double mostNegative = basicRow == null ? 0 : getEntry(basicRow, getRhsOffset());
+        Set<Integer> basicRows = new HashSet<Integer>();
         for (int i = 0; i < coefficients.length; i++) {
             basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+            if (basicRows.contains(basicRow)) {
                 // if multiple variables can take a given value 
                 // then we choose the first and set the rest equal to 0
+                coefficients[i] = 0;
+            } else {
+                basicRows.add(basicRow);
                 coefficients[i] =
                     (basicRow == null ? 0 : getEntry(basicRow, getRhsOffset())) -
                     (restrictToNonNegative ? 0 : mostNegative);
-            if (basicRow != null) {
-                for (int j = getNumObjectiveFunctions(); j < getNumObjectiveFunctions() + i; j++) {
-                    if (tableau.getEntry(basicRow, j) == 1) {
-                         coefficients[i] = 0;
-                    }
-                }
             }
         }
         return new RealPointValuePair(coefficients, f.getValue(coefficients));
