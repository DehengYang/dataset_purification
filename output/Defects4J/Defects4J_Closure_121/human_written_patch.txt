diff -Naur /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_121/src/com/google/javascript/jscomp/InlineVariables.java /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_121/fixed-version/src/com/google/javascript/jscomp/InlineVariables.java
--- /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_121/src/com/google/javascript/jscomp/InlineVariables.java	2020-03-01 00:34:04.184035971 -0800
+++ /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_121/fixed-version/src/com/google/javascript/jscomp/InlineVariables.java	2020-03-01 00:34:07.212178655 -0800
@@ -301,10 +301,12 @@
       if (!maybeModifiedArguments &&
           !staleVars.contains(v) &&
           referenceInfo.isWellDefined() &&
-          referenceInfo.isAssignedOnceInLifetime()) {
+          referenceInfo.isAssignedOnceInLifetime() &&
           // Inlining the variable based solely on well-defined and assigned
           // once is *NOT* correct. We relax the correctness requirement if
           // the variable is declared constant.
+          (isInlineableDeclaredConstant(v, referenceInfo) ||
+           referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {
         List<Reference> refs = referenceInfo.references;
         for (int i = 1 /* start from a read */; i < refs.size(); i++) {
           Node nameNode = refs.get(i).getNode();
