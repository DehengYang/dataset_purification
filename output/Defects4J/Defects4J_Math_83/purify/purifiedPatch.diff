--- /mnt/purify/repairDir/Purify_Defects4J_Math_83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java	2020-10-21 13:44:37.437727012 -0400
+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_83/purify/purified/org/apache/commons/math/optimization/linear/SimplexTableau.java	2020-10-21 13:44:37.437727012 -0400
@@ -289,7 +289,7 @@
      */
     private Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {
         Integer row = null;
-        int start = getNumObjectiveFunctions();
+        int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;
         for (int i = start; i < getHeight(); i++) {
             if (MathUtils.equals(getEntry(i, col), 1.0, epsilon) && (row == null)) {
                 row = i;
@@ -342,7 +342,7 @@
       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow, getRhsOffset());
       Set<Integer> basicRows = new HashSet<Integer>();
       for (int i = 0; i < coefficients.length; i++) {
-          Integer basicRow = getBasicRow(getNumObjectiveFunctions() + i);
+          Integer basicRow = getBasicRowForSolution(getNumObjectiveFunctions() + i);
           if (basicRows.contains(basicRow)) {
               // if multiple variables can take a given value 
               // then we choose the first and set the rest equal to 0
