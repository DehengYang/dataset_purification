diff -Naur /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/fixed-version/src/com/google/javascript/jscomp/FunctionTypeBuilder.java
--- /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/src/com/google/javascript/jscomp/FunctionTypeBuilder.java	2020-03-01 00:31:13.175978209 -0800
+++ /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/fixed-version/src/com/google/javascript/jscomp/FunctionTypeBuilder.java	2020-03-01 00:31:15.208073960 -0800
@@ -181,7 +181,7 @@
       // create interfaces JSType, ObjectType, FunctionType etc and have
       // separate implementation instead of the class hierarchy, so that
       // union types can also be object types, etc.
-      if (!type.isSubtype(
+      if (!type.restrictByNotNullOrUndefined().isSubtype(
               typeRegistry.getNativeType(OBJECT_TYPE))) {
         reportWarning(THIS_TYPE_NON_OBJECT, type.toString());
         return false;
diff -Naur /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/src/com/google/javascript/rhino/jstype/FunctionType.java /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/fixed-version/src/com/google/javascript/rhino/jstype/FunctionType.java
--- /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/src/com/google/javascript/rhino/jstype/FunctionType.java	2020-03-01 00:31:13.175978209 -0800
+++ /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_90/fixed-version/src/com/google/javascript/rhino/jstype/FunctionType.java	2020-03-01 00:31:15.212074149 -0800
@@ -877,6 +877,9 @@
     // mean "nullable Foo". For certain tags (like @extends) we de-nullify
     // the name for them.
     JSType maybeTypeOfThis = safeResolve(typeOfThis, t, scope);
+    if (maybeTypeOfThis != null) {
+      maybeTypeOfThis = maybeTypeOfThis.restrictByNotNullOrUndefined();
+    }
     if (maybeTypeOfThis instanceof ObjectType) {
       typeOfThis = (ObjectType) maybeTypeOfThis;
     }
