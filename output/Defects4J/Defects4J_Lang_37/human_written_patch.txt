diff -Naur /mnt/benchmarks/bugs/Defects4J/Defects4J_Lang_37/src/java/org/apache/commons/lang3/ArrayUtils.java /mnt/benchmarks/bugs/Defects4J/Defects4J_Lang_37/fixed-version/src/java/org/apache/commons/lang3/ArrayUtils.java
--- /mnt/benchmarks/bugs/Defects4J/Defects4J_Lang_37/src/java/org/apache/commons/lang3/ArrayUtils.java	2020-03-01 00:09:44.643265033 -0800
+++ /mnt/benchmarks/bugs/Defects4J/Defects4J_Lang_37/fixed-version/src/java/org/apache/commons/lang3/ArrayUtils.java	2020-03-01 00:09:48.099427874 -0800
@@ -2959,8 +2959,16 @@
         final Class<?> type1 = array1.getClass().getComponentType();
         T[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);
         System.arraycopy(array1, 0, joinedArray, 0, array1.length);
+        try {
             System.arraycopy(array2, 0, joinedArray, array1.length, array2.length);
+        } catch (ArrayStoreException ase) {
             // Check if problem is incompatible types
+            final Class<?> type2 = array2.getClass().getComponentType();
+            if (!type1.isAssignableFrom(type2)){
+                throw new IllegalArgumentException("Cannot store "+type2.getName()+" in an array of "+type1.getName());
+            }
+            throw ase; // No, so rethrow original
+        }
         return joinedArray;
     }
 
