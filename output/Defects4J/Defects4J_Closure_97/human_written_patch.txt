diff -Naur /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_97/fixed-version/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
--- /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_97/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2020-03-01 00:31:41.073292709 -0800
+++ /mnt/benchmarks/bugs/Defects4J/Defects4J_Closure_97/fixed-version/src/com/google/javascript/jscomp/PeepholeFoldConstants.java	2020-03-01 00:31:43.021384502 -0800
@@ -695,7 +695,8 @@
           // JavaScript handles zero shifts on signed numbers differently than
           // Java as an Java int can not represent the unsigned 32-bit number
           // where JavaScript can so use a long here.
-          result = lvalInt >>> rvalInt;
+          long lvalLong = lvalInt & 0xffffffffL;
+          result = lvalLong >>> rvalInt;
           break;
         default:
           throw new AssertionError("Unknown shift operator: " +
