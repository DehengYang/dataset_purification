--- /mnt/purify/repairDir/Purify_Defects4J_Math_29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	2020-10-21 10:31:08.074025244 -0400
+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_29/purify/purified/org/apache/commons/math3/linear/OpenMapRealVector.java	2020-10-21 10:31:08.074025244 -0400
@@ -347,9 +347,11 @@
          * this[i] / v[i] = NaN, and not 0d.
          */
         Iterator iter = entries.iterator();
-        while (iter.hasNext()) {
             iter.advance();
             res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key()));
+        final int n = getDimension();
+        for (int i = 0; i < n; i++) {
+            res.setEntry(i, this.getEntry(i) / v.getEntry(i));
         }
         return res;
     }
@@ -371,6 +373,17 @@
          *
          * These special cases are handled below.
          */
+        if (v.isNaN() || v.isInfinite()) {
+            final int n = getDimension();
+            for (int i = 0; i < n; i++) {
+                final double y = v.getEntry(i);
+                if (Double.isNaN(y)) {
+                } else if (Double.isInfinite(y)) {
+                    final double x = this.getEntry(i);
+                    res.setEntry(i, x * y);
+                }
+            }
+        }
         return res;
     }
 
