--- /mnt/purify/repairDir/Purify_Defects4J_Closure_79/src/com/google/javascript/jscomp/VarCheck.java	2020-10-23 10:06:19.042049191 -0400
+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Closure_79/purify/purified/com/google/javascript/jscomp/VarCheck.java	2020-10-23 10:06:19.042049191 -0400
@@ -218,6 +218,7 @@
     getSynthesizedExternsRoot().addChildToBack(
         new Node(Token.VAR, nameNode));
     varsToDeclareInExterns.remove(varName);
+    compiler.reportCodeChange();
   }
 
   /**
--- /mnt/purify/repairDir/Purify_Defects4J_Closure_79/src/com/google/javascript/jscomp/Normalize.java	2020-10-23 10:06:19.058049654 -0400
+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Closure_79/purify/purified/com/google/javascript/jscomp/Normalize.java	2020-10-23 10:06:19.058049654 -0400
@@ -119,7 +119,7 @@
   public void process(Node externs, Node root) {
     new NodeTraversal(
         compiler, new NormalizeStatements(compiler, assertOnChange))
-        .traverse(root);
+        .traverseRoots(externs, root);
     if (MAKE_LOCAL_NAMES_UNIQUE) {
       MakeDeclaredNamesUnique renamer = new MakeDeclaredNamesUnique();
       NodeTraversal t = new NodeTraversal(compiler, renamer);
