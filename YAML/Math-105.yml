1 bug_id: Math-105
2 src folder:
  name of src folder: java
  number of files: 156
  number of java files: 139
  number of src classes: 149
  number of test classes: 96
3 test (cases):
  failing test cases:
  - org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative
  failing tests:
  - org.apache.commons.math.stat.regression.SimpleRegressionTest
  number of all test cases: 887
  number of failing test cases: 1
4 time cost of purification:
  coverage on buggy version: 2.0
  coverage on fixed version: 6.0
  purification via coverage: 0.001
  purification via delta debugging: 28.376
  repair actions extraction: 0.944
5 stmts covered by failing cases:
  buggy:
    org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative: 25
  fixed:
    org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative: 25
6 reduced lines:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  covAdd: 1
  covDel: 1
  cov_patch_lines: 2
  delta_patch_lines: 2
  oriAdd: 1
  oriDel: 1
  ori_patch_lines: 2
  purAdd: 1
  purDel: 1
7 reduced chunks:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  cov: 1
  original: 1
  purifiy: 1
8 mutants by delta debugging:
  failAll: 0
  failCompile: 2
  failFail: 0
  passed: 0
  total: 2
9 sibling repair actions: []
10 patch:
  original: "--- /mnt/purify/repairDir/Purify_Defects4J_Math_105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\t\
    2020-10-21 14:26:02.389555720 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_105/purify/patch/org/apache/commons/math/stat/regression/SimpleRegression.java\t\
    2020-10-21 14:26:02.385555605 -0400\n@@ -261,7 +261,7 @@\n      * @return sum\
    \ of squared errors associated with the regression model\n      */\n     public\
    \ double getSumSquaredErrors() {\n-        return sumYY - sumXY * sumXY / sumXX;\n\
    +        return Math.max(0d, sumYY - sumXY * sumXY / sumXX);\n     }\n \n    \
    \ /**"
  purified: "--- /mnt/purify/repairDir/Purify_Defects4J_Math_105/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java\t\
    2020-10-21 14:26:38.558600898 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_105/purify/purified/org/apache/commons/math/stat/regression/SimpleRegression.java\t\
    2020-10-21 14:26:38.554600782 -0400\n@@ -261,7 +261,7 @@\n      * @return sum\
    \ of squared errors associated with the regression model\n      */\n     public\
    \ double getSumSquaredErrors() {\n-        return sumYY - sumXY * sumXY / sumXX;\n\
    +        return Math.max(0d, sumYY - sumXY * sumXY / sumXX);\n     }\n \n    \
    \ /**"
11 repair actions: {}
12 ori_repair_actions:
  biggest_depth: 4
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/math/stat/regression/SimpleRegression:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD ReturnStatement@@InfixExpression:sumYY - sumXY * sumXY / sumXX @TO@ MethodInvocation:Math.max(0d,sumYY
      - sumXY * sumXY / sumXX) '
    - '---INS MethodInvocation@@Math.max(0d,sumYY - sumXY * sumXY / sumXX) @TO@ ReturnStatement@@InfixExpression:sumYY
      - sumXY * sumXY / sumXX '
    - '------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.max(0d,sumYY -
      sumXY * sumXY / sumXX) '
    - '------INS SimpleName@@MethodName:max:[0d, sumYY - sumXY * sumXY / sumXX] @TO@
      MethodInvocation@@Math.max(0d,sumYY - sumXY * sumXY / sumXX) '
    - '---------MOV InfixExpression@@sumYY - sumXY * sumXY / sumXX @TO@ SimpleName@@MethodName:max:[0d,
      sumYY - sumXY * sumXY / sumXX] '
    - '---------INS NumberLiteral@@0d @TO@ SimpleName@@MethodName:max:[0d, sumYY -
      sumXY * sumXY / sumXX] '
  repair_actions_cnt: 1
13 purify_repair_actions:
  biggest_depth: 4
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/math/stat/regression/SimpleRegression:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD ReturnStatement@@InfixExpression:sumYY - sumXY * sumXY / sumXX @TO@ MethodInvocation:Math.max(0d,sumYY
      - sumXY * sumXY / sumXX) '
    - '---INS MethodInvocation@@Math.max(0d,sumYY - sumXY * sumXY / sumXX) @TO@ ReturnStatement@@InfixExpression:sumYY
      - sumXY * sumXY / sumXX '
    - '------INS SimpleName@@Name:Math @TO@ MethodInvocation@@Math.max(0d,sumYY -
      sumXY * sumXY / sumXX) '
    - '------INS SimpleName@@MethodName:max:[0d, sumYY - sumXY * sumXY / sumXX] @TO@
      MethodInvocation@@Math.max(0d,sumYY - sumXY * sumXY / sumXX) '
    - '---------MOV InfixExpression@@sumYY - sumXY * sumXY / sumXX @TO@ SimpleName@@MethodName:max:[0d,
      sumYY - sumXY * sumXY / sumXX] '
    - '---------INS NumberLiteral@@0d @TO@ SimpleName@@MethodName:max:[0d, sumYY -
      sumXY * sumXY / sumXX] '
  repair_actions_cnt: 1
