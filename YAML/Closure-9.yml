1 bug_id: Closure-9
2 src folder:
  name of src folder: src
  number of files: 423
  number of java files: 407
  number of src classes: 1367
  number of test classes: 225
3 test (cases):
  failing test cases:
  - com.google.javascript.jscomp.ProcessCommonJSModulesTest#testGuessModuleName
  failing tests:
  - com.google.javascript.jscomp.ProcessCommonJSModulesTest
  number of all test cases: 7655
  number of failing test cases: 1
4 time cost of purification:
  coverage on buggy version: 7.0
  coverage on fixed version: 2.0
  purification via coverage: 0.91
  purification via delta debugging: 154.368
  repair actions extraction: 0.877
5 stmts covered by failing cases:
  buggy:
    com.google.javascript.jscomp.ProcessCommonJSModulesTest#testGuessModuleName: 34
  fixed:
    com.google.javascript.jscomp.ProcessCommonJSModulesTest#testGuessModuleName: 35
6 reduced lines:
  by all: 2
  by coverage: 2
  by delta debugging: 0
  covAdd: 1
  covDel: 0
  cov_patch_lines: 1
  delta_patch_lines: 1
  oriAdd: 2
  oriDel: 1
  ori_patch_lines: 3
  purAdd: 1
  purDel: 0
7 reduced chunks:
  by all: 1
  by coverage: 1
  by delta debugging: 0
  cov: 1
  original: 2
  purifiy: 1
8 mutants by delta debugging:
  failAll: 0
  failCompile: 0
  failFail: 0
  passed: 0
  total: 0
9 sibling repair actions: []
10 patch:
  original: "--- /mnt/purify/repairDir/Purify_Defects4J_Closure_9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\t\
    2020-10-21 17:24:47.876603211 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Closure_9/purify/patch/com/google/javascript/jscomp/ProcessCommonJSModules.java\t\
    2020-10-21 17:24:47.872603096 -0400\n@@ -116,6 +116,7 @@\n   private String normalizeSourceName(String\
    \ filename) {\n     // The DOS command shell will normalize \"/\" to \"\\\", so\
    \ we have to\n     // wrestle it back.\n+    filename = filename.replace(\"\\\\\
    \", \"/\");\n \n     if (filename.indexOf(filenamePrefix) == 0) {\n       filename\
    \ = filename.substring(filenamePrefix.length());\n@@ -180,7 +181,7 @@\n      \
    \ Preconditions.checkArgument(scriptNodeCount == 1,\n           \"ProcessCommonJSModules\
    \ supports only one invocation per \" +\n           \"CompilerInput / script node\"\
    );\n-      String moduleName = guessCJSModuleName(normalizeSourceName(script.getSourceFileName()));\n\
    +      String moduleName = guessCJSModuleName(script.getSourceFileName());\n \
    \      script.addChildToFront(IR.var(IR.name(moduleName), IR.objectlit())\n  \
    \         .copyInformationFromForTree(script));\n       if (reportDependencies)\
    \ {"
  purified: "--- /mnt/purify/repairDir/Purify_Defects4J_Closure_9/src/com/google/javascript/jscomp/ProcessCommonJSModules.java\t\
    2020-10-21 17:27:47.349752349 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Closure_9/purify/purified/com/google/javascript/jscomp/ProcessCommonJSModules.java\t\
    2020-10-21 17:27:47.349752349 -0400\n@@ -116,6 +116,7 @@\n   private String normalizeSourceName(String\
    \ filename) {\n     // The DOS command shell will normalize \"/\" to \"\\\", so\
    \ we have to\n     // wrestle it back.\n+    filename = filename.replace(\"\\\\\
    \", \"/\");\n \n     if (filename.indexOf(filenamePrefix) == 0) {\n       filename\
    \ = filename.substring(filenamePrefix.length());"
11 repair actions: {}
12 ori_repair_actions:
  biggest_depth: 6
  classes_cnt: '1'
  com/google/javascript/jscomp/ProcessCommonJSModules:
  - !yamlable/myyaml.Action
    lines:
    - 'INS ExpressionStatement@@Assignment:filename=filename.replace("\\","/") @TO@
      MethodDeclaration@@private, @@String, MethodName:normalizeSourceName, @@Argus:String+filename+ '
    - '---INS Assignment@@filename=filename.replace("\\","/") @TO@ ExpressionStatement@@Assignment:filename=filename.replace("\\","/") '
    - '------INS SimpleName@@filename @TO@ Assignment@@filename=filename.replace("\\","/") '
    - '------INS Operator@@= @TO@ Assignment@@filename=filename.replace("\\","/") '
    - '------INS MethodInvocation@@filename.replace("\\","/") @TO@ Assignment@@filename=filename.replace("\\","/") '
    - '---------INS SimpleName@@Name:filename @TO@ MethodInvocation@@filename.replace("\\","/") '
    - '---------INS SimpleName@@MethodName:replace:["\\", "/"] @TO@ MethodInvocation@@filename.replace("\\","/") '
    - '------------INS StringLiteral@@"\\" @TO@ SimpleName@@MethodName:replace:["\\",
      "/"] '
    - '------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:replace:["\\",
      "/"] '
  - !yamlable/myyaml.Action
    lines:
    - 'UPD VariableDeclarationStatement@@String moduleName=guessCJSModuleName(normalizeSourceName(script.getSourceFileName()));
      @TO@ String moduleName=guessCJSModuleName(script.getSourceFileName()); '
    - '---UPD VariableDeclarationFragment@@moduleName=guessCJSModuleName(normalizeSourceName(script.getSourceFileName()))
      @TO@ moduleName=guessCJSModuleName(script.getSourceFileName()) '
    - '------UPD MethodInvocation@@guessCJSModuleName(normalizeSourceName(script.getSourceFileName()))
      @TO@ guessCJSModuleName(script.getSourceFileName()) '
    - '---------UPD SimpleName@@MethodName:guessCJSModuleName:[normalizeSourceName(script.getSourceFileName())]
      @TO@ MethodName:guessCJSModuleName:[script.getSourceFileName()] '
    - '------------DEL MethodInvocation@@normalizeSourceName(script.getSourceFileName()) '
    - '---------------DEL SimpleName@@MethodName:normalizeSourceName:[script.getSourceFileName()] '
    - '------------MOV MethodInvocation@@script.getSourceFileName() @TO@ SimpleName@@MethodName:guessCJSModuleName:[normalizeSourceName(script.getSourceFileName())] '
  files_cnt: '1'
  repair_actions_cnt: 2
13 purify_repair_actions:
  biggest_depth: 5
  classes_cnt: '1'
  com/google/javascript/jscomp/ProcessCommonJSModules:
  - !yamlable/myyaml.Action
    lines:
    - 'INS ExpressionStatement@@Assignment:filename=filename.replace("\\","/") @TO@
      MethodDeclaration@@private, @@String, MethodName:normalizeSourceName, @@Argus:String+filename+ '
    - '---INS Assignment@@filename=filename.replace("\\","/") @TO@ ExpressionStatement@@Assignment:filename=filename.replace("\\","/") '
    - '------INS SimpleName@@filename @TO@ Assignment@@filename=filename.replace("\\","/") '
    - '------INS Operator@@= @TO@ Assignment@@filename=filename.replace("\\","/") '
    - '------INS MethodInvocation@@filename.replace("\\","/") @TO@ Assignment@@filename=filename.replace("\\","/") '
    - '---------INS SimpleName@@Name:filename @TO@ MethodInvocation@@filename.replace("\\","/") '
    - '---------INS SimpleName@@MethodName:replace:["\\", "/"] @TO@ MethodInvocation@@filename.replace("\\","/") '
    - '------------INS StringLiteral@@"\\" @TO@ SimpleName@@MethodName:replace:["\\",
      "/"] '
    - '------------INS StringLiteral@@"/" @TO@ SimpleName@@MethodName:replace:["\\",
      "/"] '
  files_cnt: '1'
  repair_actions_cnt: 1
