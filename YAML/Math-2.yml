1 bug_id: Math-2
2 src folder:
  name of src folder: java
  number of files: 809
  number of java files: 808
  number of src classes: 1091
  number of test classes: 407
3 test (cases):
  failing test cases:
  - org.apache.commons.math3.distribution.HypergeometricDistributionTest#testMath1021
  failing tests:
  - org.apache.commons.math3.distribution.HypergeometricDistributionTest
  number of all test cases: 5246
  number of failing test cases: 1
4 time cost of purification:
  coverage on buggy version: 5.0
  coverage on fixed version: 1.0
  purification via coverage: 0.001
  purification via delta debugging: 144.108
  repair actions extraction: 0.859
5 stmts covered by failing cases:
  buggy:
    org.apache.commons.math3.distribution.HypergeometricDistributionTest#testMath1021: 138
  fixed:
    org.apache.commons.math3.distribution.HypergeometricDistributionTest#testMath1021: 302
6 reduced lines:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  covAdd: 1
  covDel: 1
  cov_patch_lines: 2
  delta_patch_lines: 2
  oriAdd: 1
  oriDel: 1
  ori_patch_lines: 2
  purAdd: 1
  purDel: 1
7 reduced chunks:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  cov: 1
  original: 1
  purifiy: 1
8 mutants by delta debugging:
  failAll: 0
  failCompile: 2
  failFail: 0
  passed: 0
  total: 2
9 sibling repair actions: []
10 patch:
  original: "--- /mnt/purify/repairDir/Purify_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\t\
    2020-10-21 04:22:44.270467060 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_2/purify/patch/org/apache/commons/math3/distribution/HypergeometricDistribution.java\t\
    2020-10-21 04:22:44.270467060 -0400\n@@ -265,7 +265,7 @@\n      * size {@code\
    \ n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean()\
    \ {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double)\
    \ getPopulationSize();\n+        return getSampleSize() * (getNumberOfSuccesses()\
    \ / (double) getPopulationSize());\n     }\n \n     /**"
  purified: "--- /mnt/purify/repairDir/Purify_Defects4J_Math_2/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution.java\t\
    2020-10-21 04:25:28.363207003 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_2/purify/purified/org/apache/commons/math3/distribution/HypergeometricDistribution.java\t\
    2020-10-21 04:25:28.363207003 -0400\n@@ -265,7 +265,7 @@\n      * size {@code\
    \ n}, the mean is {@code n * m / N}.\n      */\n     public double getNumericalMean()\
    \ {\n-        return (double) (getSampleSize() * getNumberOfSuccesses()) / (double)\
    \ getPopulationSize();\n+        return getSampleSize() * (getNumberOfSuccesses()\
    \ / (double) getPopulationSize());\n     }\n \n     /**"
11 repair actions: {}
12 ori_repair_actions:
  biggest_depth: 5
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/math3/distribution/HypergeometricDistribution:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD ReturnStatement@@InfixExpression:(double)(getSampleSize() * getNumberOfSuccesses())
      / (double)getPopulationSize() @TO@ InfixExpression:getSampleSize() * (getNumberOfSuccesses()
      / (double)getPopulationSize()) '
    - '---UPD InfixExpression@@(double)(getSampleSize() * getNumberOfSuccesses())
      / (double)getPopulationSize() @TO@ getSampleSize() * (getNumberOfSuccesses()
      / (double)getPopulationSize()) '
    - '------DEL CastExpression@@(double)(getSampleSize() * getNumberOfSuccesses()) '
    - '---------DEL PrimitiveType@@double '
    - '---------DEL ParenthesizedExpression@@(getSampleSize() * getNumberOfSuccesses()) '
    - '------------DEL InfixExpression@@getSampleSize() * getNumberOfSuccesses() '
    - '------MOV MethodInvocation@@MethodName:getSampleSize:[] @TO@ InfixExpression@@(double)(getSampleSize()
      * getNumberOfSuccesses()) / (double)getPopulationSize() '
    - '------INS ParenthesizedExpression@@(getNumberOfSuccesses() / (double)getPopulationSize())
      @TO@ InfixExpression@@(double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize() '
    - '---------INS InfixExpression@@getNumberOfSuccesses() / (double)getPopulationSize()
      @TO@ ParenthesizedExpression@@(getNumberOfSuccesses() / (double)getPopulationSize()) '
    - '------------MOV MethodInvocation@@MethodName:getNumberOfSuccesses:[] @TO@ InfixExpression@@getNumberOfSuccesses()
      / (double)getPopulationSize() '
    - '------------MOV Operator@@/ @TO@ InfixExpression@@getNumberOfSuccesses() /
      (double)getPopulationSize() '
    - '------------MOV CastExpression@@(double)getPopulationSize() @TO@ InfixExpression@@getNumberOfSuccesses()
      / (double)getPopulationSize() '
    - '------MOV Operator@@* @TO@ InfixExpression@@(double)(getSampleSize() * getNumberOfSuccesses())
      / (double)getPopulationSize() '
  repair_actions_cnt: 1
13 purify_repair_actions:
  biggest_depth: 5
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/math3/distribution/HypergeometricDistribution:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD ReturnStatement@@InfixExpression:(double)(getSampleSize() * getNumberOfSuccesses())
      / (double)getPopulationSize() @TO@ InfixExpression:getSampleSize() * (getNumberOfSuccesses()
      / (double)getPopulationSize()) '
    - '---UPD InfixExpression@@(double)(getSampleSize() * getNumberOfSuccesses())
      / (double)getPopulationSize() @TO@ getSampleSize() * (getNumberOfSuccesses()
      / (double)getPopulationSize()) '
    - '------DEL CastExpression@@(double)(getSampleSize() * getNumberOfSuccesses()) '
    - '---------DEL PrimitiveType@@double '
    - '---------DEL ParenthesizedExpression@@(getSampleSize() * getNumberOfSuccesses()) '
    - '------------DEL InfixExpression@@getSampleSize() * getNumberOfSuccesses() '
    - '------MOV MethodInvocation@@MethodName:getSampleSize:[] @TO@ InfixExpression@@(double)(getSampleSize()
      * getNumberOfSuccesses()) / (double)getPopulationSize() '
    - '------INS ParenthesizedExpression@@(getNumberOfSuccesses() / (double)getPopulationSize())
      @TO@ InfixExpression@@(double)(getSampleSize() * getNumberOfSuccesses()) / (double)getPopulationSize() '
    - '---------INS InfixExpression@@getNumberOfSuccesses() / (double)getPopulationSize()
      @TO@ ParenthesizedExpression@@(getNumberOfSuccesses() / (double)getPopulationSize()) '
    - '------------MOV MethodInvocation@@MethodName:getNumberOfSuccesses:[] @TO@ InfixExpression@@getNumberOfSuccesses()
      / (double)getPopulationSize() '
    - '------------MOV Operator@@/ @TO@ InfixExpression@@getNumberOfSuccesses() /
      (double)getPopulationSize() '
    - '------------MOV CastExpression@@(double)getPopulationSize() @TO@ InfixExpression@@getNumberOfSuccesses()
      / (double)getPopulationSize() '
    - '------MOV Operator@@* @TO@ InfixExpression@@(double)(getSampleSize() * getNumberOfSuccesses())
      / (double)getPopulationSize() '
  repair_actions_cnt: 1
