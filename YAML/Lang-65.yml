1 bug_id: Lang-65
2 src folder:
  name of src folder: java
  number of files: 86
  number of java files: 76
  number of src classes: 126
  number of test classes: 88
3 test (cases):
  failing test cases:
  - org.apache.commons.lang.time.DateUtilsTest#testTruncateLang59
  failing tests:
  - org.apache.commons.lang.time.DateUtilsTest
  number of all test cases: 1633
  number of failing test cases: 1
4 time cost of purification:
  coverage on buggy version: 2.0
  coverage on fixed version: 8.0
  purification via coverage: 1.513
  purification via delta debugging: 236.591
  repair actions extraction: 2.015
5 stmts covered by failing cases:
  buggy:
    org.apache.commons.lang.time.DateUtilsTest#testTruncateLang59: 23
  fixed:
    org.apache.commons.lang.time.DateUtilsTest#testTruncateLang59: 50
6 reduced lines:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  covAdd: 30
  covDel: 0
  cov_patch_lines: 30
  delta_patch_lines: 30
  oriAdd: 30
  oriDel: 0
  ori_patch_lines: 30
  purAdd: 30
  purDel: 0
7 reduced chunks:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  cov: 8
  original: 8
  purifiy: 8
8 mutants by delta debugging:
  failAll: 0
  failCompile: 48
  failFail: 12
  passed: 0
  total: 60
9 sibling repair actions:
- 4 6 0.7834142037935597
- 7 9 0.7411784014442804
10 patch:
  original: "--- /mnt/purify/repairDir/Purify_Defects4J_Lang_65/src/java/org/apache/commons/lang/time/DateUtils.java\t\
    2020-10-21 04:12:28.336676793 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Lang_65/purify/patch/org/apache/commons/lang/time/DateUtils.java\t\
    2020-10-21 04:12:28.336676793 -0400\n@@ -621,6 +621,9 @@\n             throw new\
    \ ArithmeticException(\"Calendar value too large for accurate calculations\");\n\
    \         }\n         \n+        if (field == Calendar.MILLISECOND) {\n+     \
    \       return;\n+        }\n \n         // ----------------- Fix for LANG-59\
    \ ---------------------- START ---------------\n         // see http://issues.apache.org/jira/browse/LANG-59\n\
    @@ -628,14 +631,39 @@\n         // Manually truncate milliseconds, seconds and\
    \ minutes, rather than using\n         // Calendar methods.\n \n+        Date\
    \ date = val.getTime();\n+        long time = date.getTime();\n+        boolean\
    \ done = false;\n \n         // truncate milliseconds\n+        int millisecs\
    \ = val.get(Calendar.MILLISECOND);\n+        if (!round || millisecs < 500) {\n\
    +            time = time - millisecs;\n+            if (field == Calendar.SECOND)\
    \ {\n+                done = true;\n+            }\n+        }\n \n         //\
    \ truncate seconds\n+        int seconds = val.get(Calendar.SECOND);\n+      \
    \  if (!done && (!round || seconds < 30)) {\n+            time = time - (seconds\
    \ * 1000L);\n+            if (field == Calendar.MINUTE) {\n+                done\
    \ = true;\n+            }\n+        }\n \n         // truncate minutes\n+    \
    \    int minutes = val.get(Calendar.MINUTE);\n+        if (!done && (!round ||\
    \ minutes < 30)) {\n+            time = time - (minutes * 60000L);\n+        }\n\
    \ \n         // reset time\n+        if (date.getTime() != time) {\n+        \
    \    date.setTime(time);\n+            val.setTime(date);\n+        }\n      \
    \   // ----------------- Fix for LANG-59 ----------------------- END ----------------\n\
    \ \n         boolean roundUp = false;\n@@ -706,7 +734,9 @@\n                 roundUp\
    \ = offset > ((max - min) / 2);\n             }\n             //We need to remove\
    \ this field\n+            if (offset != 0) {\n                 val.set(fields[i][0],\
    \ val.get(fields[i][0]) - offset);\n+            }\n         }\n         throw\
    \ new IllegalArgumentException(\"The field \" + field + \" is not supported\"\
    );"
  purified: "--- /mnt/purify/repairDir/Purify_Defects4J_Lang_65/src/java/org/apache/commons/lang/time/DateUtils.java\t\
    2020-10-21 04:16:36.439842326 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Lang_65/purify/purified/org/apache/commons/lang/time/DateUtils.java\t\
    2020-10-21 04:16:36.439842326 -0400\n@@ -621,6 +621,9 @@\n             throw new\
    \ ArithmeticException(\"Calendar value too large for accurate calculations\");\n\
    \         }\n         \n+        if (field == Calendar.MILLISECOND) {\n+     \
    \       return;\n+        }\n \n         // ----------------- Fix for LANG-59\
    \ ---------------------- START ---------------\n         // see http://issues.apache.org/jira/browse/LANG-59\n\
    @@ -628,14 +631,39 @@\n         // Manually truncate milliseconds, seconds and\
    \ minutes, rather than using\n         // Calendar methods.\n \n+        Date\
    \ date = val.getTime();\n+        long time = date.getTime();\n+        boolean\
    \ done = false;\n \n         // truncate milliseconds\n+        int millisecs\
    \ = val.get(Calendar.MILLISECOND);\n+        if (!round || millisecs < 500) {\n\
    +            time = time - millisecs;\n+            if (field == Calendar.SECOND)\
    \ {\n+                done = true;\n+            }\n+        }\n \n         //\
    \ truncate seconds\n+        int seconds = val.get(Calendar.SECOND);\n+      \
    \  if (!done && (!round || seconds < 30)) {\n+            time = time - (seconds\
    \ * 1000L);\n+            if (field == Calendar.MINUTE) {\n+                done\
    \ = true;\n+            }\n+        }\n \n         // truncate minutes\n+    \
    \    int minutes = val.get(Calendar.MINUTE);\n+        if (!done && (!round ||\
    \ minutes < 30)) {\n+            time = time - (minutes * 60000L);\n+        }\n\
    \ \n         // reset time\n+        if (date.getTime() != time) {\n+        \
    \    date.setTime(time);\n+            val.setTime(date);\n+        }\n      \
    \   // ----------------- Fix for LANG-59 ----------------------- END ----------------\n\
    \ \n         boolean roundUp = false;\n@@ -706,7 +734,9 @@\n                 roundUp\
    \ = offset > ((max - min) / 2);\n             }\n             //We need to remove\
    \ this field\n+            if (offset != 0) {\n                 val.set(fields[i][0],\
    \ val.get(fields[i][0]) - offset);\n+            }\n         }\n         throw\
    \ new IllegalArgumentException(\"The field \" + field + \" is not supported\"\
    );"
11 repair actions: {}
12 ori_repair_actions:
  biggest_depth: 7
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/lang/time/DateUtils:
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:field == Calendar.MILLISECOND @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@field == Calendar.MILLISECOND @TO@ IfStatement@@InfixExpression:field
      == Calendar.MILLISECOND '
    - '------INS SimpleName@@field @TO@ InfixExpression@@field == Calendar.MILLISECOND '
    - '------INS Operator@@== @TO@ InfixExpression@@field == Calendar.MILLISECOND '
    - '------INS QualifiedName@@Calendar.MILLISECOND @TO@ InfixExpression@@field ==
      Calendar.MILLISECOND '
    - '---------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MILLISECOND '
    - '---------INS SimpleName@@MILLISECOND @TO@ QualifiedName@@Calendar.MILLISECOND '
    - '---INS ReturnStatement@@ @TO@ IfStatement@@InfixExpression:field == Calendar.MILLISECOND '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@Date date=val.getTime(); @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS SimpleType@@Date @TO@ VariableDeclarationStatement@@Date date=val.getTime(); '
    - '---INS VariableDeclarationFragment@@date=val.getTime() @TO@ VariableDeclarationStatement@@Date
      date=val.getTime(); '
    - '------INS SimpleName@@date @TO@ VariableDeclarationFragment@@date=val.getTime() '
    - '------INS MethodInvocation@@val.getTime() @TO@ VariableDeclarationFragment@@date=val.getTime() '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.getTime() '
    - '---------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@val.getTime() '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@long time=date.getTime(); @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long time=date.getTime(); '
    - '---INS VariableDeclarationFragment@@time=date.getTime() @TO@ VariableDeclarationStatement@@long
      time=date.getTime(); '
    - '------INS SimpleName@@time @TO@ VariableDeclarationFragment@@time=date.getTime() '
    - '------INS MethodInvocation@@date.getTime() @TO@ VariableDeclarationFragment@@time=date.getTime() '
    - '---------INS SimpleName@@Name:date @TO@ MethodInvocation@@date.getTime() '
    - '---------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@date.getTime() '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@boolean done=false; @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean done=false; '
    - '---INS VariableDeclarationFragment@@done=false @TO@ VariableDeclarationStatement@@boolean
      done=false; '
    - '------INS SimpleName@@done @TO@ VariableDeclarationFragment@@done=false '
    - '------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@done=false '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@int millisecs=val.get(Calendar.MILLISECOND);
      @TO@ MethodDeclaration@@private, static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int millisecs=val.get(Calendar.MILLISECOND); '
    - '---INS VariableDeclarationFragment@@millisecs=val.get(Calendar.MILLISECOND)
      @TO@ VariableDeclarationStatement@@int millisecs=val.get(Calendar.MILLISECOND); '
    - '------INS SimpleName@@millisecs @TO@ VariableDeclarationFragment@@millisecs=val.get(Calendar.MILLISECOND) '
    - '------INS MethodInvocation@@val.get(Calendar.MILLISECOND) @TO@ VariableDeclarationFragment@@millisecs=val.get(Calendar.MILLISECOND) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.get(Calendar.MILLISECOND) '
    - '---------INS SimpleName@@MethodName:get:[Calendar.MILLISECOND] @TO@ MethodInvocation@@val.get(Calendar.MILLISECOND) '
    - '------------INS QualifiedName@@Calendar.MILLISECOND @TO@ SimpleName@@MethodName:get:[Calendar.MILLISECOND] '
    - '---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MILLISECOND '
    - '---------------INS SimpleName@@MILLISECOND @TO@ QualifiedName@@Calendar.MILLISECOND '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:!round || millisecs < 500 @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@!round || millisecs < 500 @TO@ IfStatement@@InfixExpression:!round
      || millisecs < 500 '
    - '------INS PrefixExpression@@!round @TO@ InfixExpression@@!round || millisecs
      < 500 '
    - '---------INS Operator@@! @TO@ PrefixExpression@@!round '
    - '---------INS SimpleName@@round @TO@ PrefixExpression@@!round '
    - '------INS Operator@@|| @TO@ InfixExpression@@!round || millisecs < 500 '
    - '------INS InfixExpression@@millisecs < 500 @TO@ InfixExpression@@!round ||
      millisecs < 500 '
    - '---------INS SimpleName@@millisecs @TO@ InfixExpression@@millisecs < 500 '
    - '---------INS Operator@@< @TO@ InfixExpression@@millisecs < 500 '
    - '---------INS NumberLiteral@@500 @TO@ InfixExpression@@millisecs < 500 '
    - '---INS ExpressionStatement@@Assignment:time=time - millisecs @TO@ IfStatement@@InfixExpression:!round
      || millisecs < 500 '
    - '------INS Assignment@@time=time - millisecs @TO@ ExpressionStatement@@Assignment:time=time
      - millisecs '
    - '---------INS SimpleName@@time @TO@ Assignment@@time=time - millisecs '
    - '---------INS Operator@@= @TO@ Assignment@@time=time - millisecs '
    - '---------INS InfixExpression@@time - millisecs @TO@ Assignment@@time=time -
      millisecs '
    - '------------INS SimpleName@@time @TO@ InfixExpression@@time - millisecs '
    - '------------INS Operator@@- @TO@ InfixExpression@@time - millisecs '
    - '------------INS SimpleName@@millisecs @TO@ InfixExpression@@time - millisecs '
    - '---INS IfStatement@@InfixExpression:field == Calendar.SECOND @TO@ IfStatement@@InfixExpression:!round
      || millisecs < 500 '
    - '------INS InfixExpression@@field == Calendar.SECOND @TO@ IfStatement@@InfixExpression:field
      == Calendar.SECOND '
    - '---------INS SimpleName@@field @TO@ InfixExpression@@field == Calendar.SECOND '
    - '---------INS Operator@@== @TO@ InfixExpression@@field == Calendar.SECOND '
    - '---------INS QualifiedName@@Calendar.SECOND @TO@ InfixExpression@@field ==
      Calendar.SECOND '
    - '------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.SECOND '
    - '------------INS SimpleName@@SECOND @TO@ QualifiedName@@Calendar.SECOND '
    - '------INS ExpressionStatement@@Assignment:done=true @TO@ IfStatement@@InfixExpression:field
      == Calendar.SECOND '
    - '---------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true '
    - '------------INS SimpleName@@done @TO@ Assignment@@done=true '
    - '------------INS Operator@@= @TO@ Assignment@@done=true '
    - '------------INS BooleanLiteral@@true @TO@ Assignment@@done=true '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@int seconds=val.get(Calendar.SECOND); @TO@
      MethodDeclaration@@private, static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int seconds=val.get(Calendar.SECOND); '
    - '---INS VariableDeclarationFragment@@seconds=val.get(Calendar.SECOND) @TO@ VariableDeclarationStatement@@int
      seconds=val.get(Calendar.SECOND); '
    - '------INS SimpleName@@seconds @TO@ VariableDeclarationFragment@@seconds=val.get(Calendar.SECOND) '
    - '------INS MethodInvocation@@val.get(Calendar.SECOND) @TO@ VariableDeclarationFragment@@seconds=val.get(Calendar.SECOND) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.get(Calendar.SECOND) '
    - '---------INS SimpleName@@MethodName:get:[Calendar.SECOND] @TO@ MethodInvocation@@val.get(Calendar.SECOND) '
    - '------------INS QualifiedName@@Calendar.SECOND @TO@ SimpleName@@MethodName:get:[Calendar.SECOND] '
    - '---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.SECOND '
    - '---------------INS SimpleName@@SECOND @TO@ QualifiedName@@Calendar.SECOND '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:!done && (!round || seconds < 30) @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@!done && (!round || seconds < 30) @TO@ IfStatement@@InfixExpression:!done
      && (!round || seconds < 30) '
    - '------INS PrefixExpression@@!done @TO@ InfixExpression@@!done && (!round ||
      seconds < 30) '
    - '---------INS Operator@@! @TO@ PrefixExpression@@!done '
    - '---------INS SimpleName@@done @TO@ PrefixExpression@@!done '
    - '------INS Operator@@&& @TO@ InfixExpression@@!done && (!round || seconds <
      30) '
    - '------INS ParenthesizedExpression@@(!round || seconds < 30) @TO@ InfixExpression@@!done
      && (!round || seconds < 30) '
    - '---------INS InfixExpression@@!round || seconds < 30 @TO@ ParenthesizedExpression@@(!round
      || seconds < 30) '
    - '------------INS PrefixExpression@@!round @TO@ InfixExpression@@!round || seconds
      < 30 '
    - '---------------INS Operator@@! @TO@ PrefixExpression@@!round '
    - '---------------INS SimpleName@@round @TO@ PrefixExpression@@!round '
    - '------------INS Operator@@|| @TO@ InfixExpression@@!round || seconds < 30 '
    - '------------INS InfixExpression@@seconds < 30 @TO@ InfixExpression@@!round
      || seconds < 30 '
    - '---------------INS SimpleName@@seconds @TO@ InfixExpression@@seconds < 30 '
    - '---------------INS Operator@@< @TO@ InfixExpression@@seconds < 30 '
    - '---------------INS NumberLiteral@@30 @TO@ InfixExpression@@seconds < 30 '
    - '---INS ExpressionStatement@@Assignment:time=time - (seconds * 1000L) @TO@ IfStatement@@InfixExpression:!done
      && (!round || seconds < 30) '
    - '------INS Assignment@@time=time - (seconds * 1000L) @TO@ ExpressionStatement@@Assignment:time=time
      - (seconds * 1000L) '
    - '---------INS SimpleName@@time @TO@ Assignment@@time=time - (seconds * 1000L) '
    - '---------INS Operator@@= @TO@ Assignment@@time=time - (seconds * 1000L) '
    - '---------INS InfixExpression@@time - (seconds * 1000L) @TO@ Assignment@@time=time
      - (seconds * 1000L) '
    - '------------INS SimpleName@@time @TO@ InfixExpression@@time - (seconds * 1000L) '
    - '------------INS Operator@@- @TO@ InfixExpression@@time - (seconds * 1000L) '
    - '------------INS ParenthesizedExpression@@(seconds * 1000L) @TO@ InfixExpression@@time
      - (seconds * 1000L) '
    - '---------------INS InfixExpression@@seconds * 1000L @TO@ ParenthesizedExpression@@(seconds
      * 1000L) '
    - '------------------INS SimpleName@@seconds @TO@ InfixExpression@@seconds * 1000L '
    - '------------------INS Operator@@* @TO@ InfixExpression@@seconds * 1000L '
    - '------------------INS NumberLiteral@@1000L @TO@ InfixExpression@@seconds *
      1000L '
    - '---INS IfStatement@@InfixExpression:field == Calendar.MINUTE @TO@ IfStatement@@InfixExpression:!done
      && (!round || seconds < 30) '
    - '------INS InfixExpression@@field == Calendar.MINUTE @TO@ IfStatement@@InfixExpression:field
      == Calendar.MINUTE '
    - '---------INS SimpleName@@field @TO@ InfixExpression@@field == Calendar.MINUTE '
    - '---------INS Operator@@== @TO@ InfixExpression@@field == Calendar.MINUTE '
    - '---------INS QualifiedName@@Calendar.MINUTE @TO@ InfixExpression@@field ==
      Calendar.MINUTE '
    - '------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MINUTE '
    - '------------INS SimpleName@@MINUTE @TO@ QualifiedName@@Calendar.MINUTE '
    - '------INS ExpressionStatement@@Assignment:done=true @TO@ IfStatement@@InfixExpression:field
      == Calendar.MINUTE '
    - '---------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true '
    - '------------INS SimpleName@@done @TO@ Assignment@@done=true '
    - '------------INS Operator@@= @TO@ Assignment@@done=true '
    - '------------INS BooleanLiteral@@true @TO@ Assignment@@done=true '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@int minutes=val.get(Calendar.MINUTE); @TO@
      MethodDeclaration@@private, static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int minutes=val.get(Calendar.MINUTE); '
    - '---INS VariableDeclarationFragment@@minutes=val.get(Calendar.MINUTE) @TO@ VariableDeclarationStatement@@int
      minutes=val.get(Calendar.MINUTE); '
    - '------INS SimpleName@@minutes @TO@ VariableDeclarationFragment@@minutes=val.get(Calendar.MINUTE) '
    - '------INS MethodInvocation@@val.get(Calendar.MINUTE) @TO@ VariableDeclarationFragment@@minutes=val.get(Calendar.MINUTE) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.get(Calendar.MINUTE) '
    - '---------INS SimpleName@@MethodName:get:[Calendar.MINUTE] @TO@ MethodInvocation@@val.get(Calendar.MINUTE) '
    - '------------INS QualifiedName@@Calendar.MINUTE @TO@ SimpleName@@MethodName:get:[Calendar.MINUTE] '
    - '---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MINUTE '
    - '---------------INS SimpleName@@MINUTE @TO@ QualifiedName@@Calendar.MINUTE '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:!done && (!round || minutes < 30) @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@!done && (!round || minutes < 30) @TO@ IfStatement@@InfixExpression:!done
      && (!round || minutes < 30) '
    - '------INS PrefixExpression@@!done @TO@ InfixExpression@@!done && (!round ||
      minutes < 30) '
    - '---------INS Operator@@! @TO@ PrefixExpression@@!done '
    - '---------INS SimpleName@@done @TO@ PrefixExpression@@!done '
    - '------INS Operator@@&& @TO@ InfixExpression@@!done && (!round || minutes <
      30) '
    - '------INS ParenthesizedExpression@@(!round || minutes < 30) @TO@ InfixExpression@@!done
      && (!round || minutes < 30) '
    - '---------INS InfixExpression@@!round || minutes < 30 @TO@ ParenthesizedExpression@@(!round
      || minutes < 30) '
    - '------------INS PrefixExpression@@!round @TO@ InfixExpression@@!round || minutes
      < 30 '
    - '---------------INS Operator@@! @TO@ PrefixExpression@@!round '
    - '---------------INS SimpleName@@round @TO@ PrefixExpression@@!round '
    - '------------INS Operator@@|| @TO@ InfixExpression@@!round || minutes < 30 '
    - '------------INS InfixExpression@@minutes < 30 @TO@ InfixExpression@@!round
      || minutes < 30 '
    - '---------------INS SimpleName@@minutes @TO@ InfixExpression@@minutes < 30 '
    - '---------------INS Operator@@< @TO@ InfixExpression@@minutes < 30 '
    - '---------------INS NumberLiteral@@30 @TO@ InfixExpression@@minutes < 30 '
    - '---INS ExpressionStatement@@Assignment:time=time - (minutes * 60000L) @TO@
      IfStatement@@InfixExpression:!done && (!round || minutes < 30) '
    - '------INS Assignment@@time=time - (minutes * 60000L) @TO@ ExpressionStatement@@Assignment:time=time
      - (minutes * 60000L) '
    - '---------INS SimpleName@@time @TO@ Assignment@@time=time - (minutes * 60000L) '
    - '---------INS Operator@@= @TO@ Assignment@@time=time - (minutes * 60000L) '
    - '---------INS InfixExpression@@time - (minutes * 60000L) @TO@ Assignment@@time=time
      - (minutes * 60000L) '
    - '------------INS SimpleName@@time @TO@ InfixExpression@@time - (minutes * 60000L) '
    - '------------INS Operator@@- @TO@ InfixExpression@@time - (minutes * 60000L) '
    - '------------INS ParenthesizedExpression@@(minutes * 60000L) @TO@ InfixExpression@@time
      - (minutes * 60000L) '
    - '---------------INS InfixExpression@@minutes * 60000L @TO@ ParenthesizedExpression@@(minutes
      * 60000L) '
    - '------------------INS SimpleName@@minutes @TO@ InfixExpression@@minutes * 60000L '
    - '------------------INS Operator@@* @TO@ InfixExpression@@minutes * 60000L '
    - '------------------INS NumberLiteral@@60000L @TO@ InfixExpression@@minutes *
      60000L '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:date.getTime() != time @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@date.getTime() != time @TO@ IfStatement@@InfixExpression:date.getTime()
      != time '
    - '------INS MethodInvocation@@date.getTime() @TO@ InfixExpression@@date.getTime()
      != time '
    - '---------INS SimpleName@@Name:date @TO@ MethodInvocation@@date.getTime() '
    - '---------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@date.getTime() '
    - '------INS Operator@@!= @TO@ InfixExpression@@date.getTime() != time '
    - '------INS SimpleName@@time @TO@ InfixExpression@@date.getTime() != time '
    - '---INS ExpressionStatement@@MethodInvocation:date.setTime(time) @TO@ IfStatement@@InfixExpression:date.getTime()
      != time '
    - '------INS MethodInvocation@@date.setTime(time) @TO@ ExpressionStatement@@MethodInvocation:date.setTime(time) '
    - '---------INS SimpleName@@Name:date @TO@ MethodInvocation@@date.setTime(time) '
    - '---------INS SimpleName@@MethodName:setTime:[time] @TO@ MethodInvocation@@date.setTime(time) '
    - '------------INS SimpleName@@time @TO@ SimpleName@@MethodName:setTime:[time] '
    - '---INS ExpressionStatement@@MethodInvocation:val.setTime(date) @TO@ IfStatement@@InfixExpression:date.getTime()
      != time '
    - '------INS MethodInvocation@@val.setTime(date) @TO@ ExpressionStatement@@MethodInvocation:val.setTime(date) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.setTime(date) '
    - '---------INS SimpleName@@MethodName:setTime:[date] @TO@ MethodInvocation@@val.setTime(date) '
    - '------------INS SimpleName@@date @TO@ SimpleName@@MethodName:setTime:[date] '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:offset != 0 @TO@ ForStatement@@[int i=0];i
      < fields.length; [i++] '
    - '---MOV ExpressionStatement@@MethodInvocation:val.set(fields[i][0],val.get(fields[i][0])
      - offset) @TO@ IfStatement@@InfixExpression:offset != 0 '
    - '---INS InfixExpression@@offset != 0 @TO@ IfStatement@@InfixExpression:offset
      != 0 '
    - '------INS SimpleName@@offset @TO@ InfixExpression@@offset != 0 '
    - '------INS Operator@@!= @TO@ InfixExpression@@offset != 0 '
    - '------INS NumberLiteral@@0 @TO@ InfixExpression@@offset != 0 '
  repair_actions_cnt: 12
13 purify_repair_actions:
  biggest_depth: 7
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/lang/time/DateUtils:
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:field == Calendar.MILLISECOND @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@field == Calendar.MILLISECOND @TO@ IfStatement@@InfixExpression:field
      == Calendar.MILLISECOND '
    - '------INS SimpleName@@field @TO@ InfixExpression@@field == Calendar.MILLISECOND '
    - '------INS Operator@@== @TO@ InfixExpression@@field == Calendar.MILLISECOND '
    - '------INS QualifiedName@@Calendar.MILLISECOND @TO@ InfixExpression@@field ==
      Calendar.MILLISECOND '
    - '---------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MILLISECOND '
    - '---------INS SimpleName@@MILLISECOND @TO@ QualifiedName@@Calendar.MILLISECOND '
    - '---INS ReturnStatement@@ @TO@ IfStatement@@InfixExpression:field == Calendar.MILLISECOND '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@Date date=val.getTime(); @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS SimpleType@@Date @TO@ VariableDeclarationStatement@@Date date=val.getTime(); '
    - '---INS VariableDeclarationFragment@@date=val.getTime() @TO@ VariableDeclarationStatement@@Date
      date=val.getTime(); '
    - '------INS SimpleName@@date @TO@ VariableDeclarationFragment@@date=val.getTime() '
    - '------INS MethodInvocation@@val.getTime() @TO@ VariableDeclarationFragment@@date=val.getTime() '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.getTime() '
    - '---------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@val.getTime() '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@long time=date.getTime(); @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@long @TO@ VariableDeclarationStatement@@long time=date.getTime(); '
    - '---INS VariableDeclarationFragment@@time=date.getTime() @TO@ VariableDeclarationStatement@@long
      time=date.getTime(); '
    - '------INS SimpleName@@time @TO@ VariableDeclarationFragment@@time=date.getTime() '
    - '------INS MethodInvocation@@date.getTime() @TO@ VariableDeclarationFragment@@time=date.getTime() '
    - '---------INS SimpleName@@Name:date @TO@ MethodInvocation@@date.getTime() '
    - '---------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@date.getTime() '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@boolean done=false; @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@boolean @TO@ VariableDeclarationStatement@@boolean done=false; '
    - '---INS VariableDeclarationFragment@@done=false @TO@ VariableDeclarationStatement@@boolean
      done=false; '
    - '------INS SimpleName@@done @TO@ VariableDeclarationFragment@@done=false '
    - '------INS BooleanLiteral@@false @TO@ VariableDeclarationFragment@@done=false '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@int millisecs=val.get(Calendar.MILLISECOND);
      @TO@ MethodDeclaration@@private, static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int millisecs=val.get(Calendar.MILLISECOND); '
    - '---INS VariableDeclarationFragment@@millisecs=val.get(Calendar.MILLISECOND)
      @TO@ VariableDeclarationStatement@@int millisecs=val.get(Calendar.MILLISECOND); '
    - '------INS SimpleName@@millisecs @TO@ VariableDeclarationFragment@@millisecs=val.get(Calendar.MILLISECOND) '
    - '------INS MethodInvocation@@val.get(Calendar.MILLISECOND) @TO@ VariableDeclarationFragment@@millisecs=val.get(Calendar.MILLISECOND) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.get(Calendar.MILLISECOND) '
    - '---------INS SimpleName@@MethodName:get:[Calendar.MILLISECOND] @TO@ MethodInvocation@@val.get(Calendar.MILLISECOND) '
    - '------------INS QualifiedName@@Calendar.MILLISECOND @TO@ SimpleName@@MethodName:get:[Calendar.MILLISECOND] '
    - '---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MILLISECOND '
    - '---------------INS SimpleName@@MILLISECOND @TO@ QualifiedName@@Calendar.MILLISECOND '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:!round || millisecs < 500 @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@!round || millisecs < 500 @TO@ IfStatement@@InfixExpression:!round
      || millisecs < 500 '
    - '------INS PrefixExpression@@!round @TO@ InfixExpression@@!round || millisecs
      < 500 '
    - '---------INS Operator@@! @TO@ PrefixExpression@@!round '
    - '---------INS SimpleName@@round @TO@ PrefixExpression@@!round '
    - '------INS Operator@@|| @TO@ InfixExpression@@!round || millisecs < 500 '
    - '------INS InfixExpression@@millisecs < 500 @TO@ InfixExpression@@!round ||
      millisecs < 500 '
    - '---------INS SimpleName@@millisecs @TO@ InfixExpression@@millisecs < 500 '
    - '---------INS Operator@@< @TO@ InfixExpression@@millisecs < 500 '
    - '---------INS NumberLiteral@@500 @TO@ InfixExpression@@millisecs < 500 '
    - '---INS ExpressionStatement@@Assignment:time=time - millisecs @TO@ IfStatement@@InfixExpression:!round
      || millisecs < 500 '
    - '------INS Assignment@@time=time - millisecs @TO@ ExpressionStatement@@Assignment:time=time
      - millisecs '
    - '---------INS SimpleName@@time @TO@ Assignment@@time=time - millisecs '
    - '---------INS Operator@@= @TO@ Assignment@@time=time - millisecs '
    - '---------INS InfixExpression@@time - millisecs @TO@ Assignment@@time=time -
      millisecs '
    - '------------INS SimpleName@@time @TO@ InfixExpression@@time - millisecs '
    - '------------INS Operator@@- @TO@ InfixExpression@@time - millisecs '
    - '------------INS SimpleName@@millisecs @TO@ InfixExpression@@time - millisecs '
    - '---INS IfStatement@@InfixExpression:field == Calendar.SECOND @TO@ IfStatement@@InfixExpression:!round
      || millisecs < 500 '
    - '------INS InfixExpression@@field == Calendar.SECOND @TO@ IfStatement@@InfixExpression:field
      == Calendar.SECOND '
    - '---------INS SimpleName@@field @TO@ InfixExpression@@field == Calendar.SECOND '
    - '---------INS Operator@@== @TO@ InfixExpression@@field == Calendar.SECOND '
    - '---------INS QualifiedName@@Calendar.SECOND @TO@ InfixExpression@@field ==
      Calendar.SECOND '
    - '------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.SECOND '
    - '------------INS SimpleName@@SECOND @TO@ QualifiedName@@Calendar.SECOND '
    - '------INS ExpressionStatement@@Assignment:done=true @TO@ IfStatement@@InfixExpression:field
      == Calendar.SECOND '
    - '---------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true '
    - '------------INS SimpleName@@done @TO@ Assignment@@done=true '
    - '------------INS Operator@@= @TO@ Assignment@@done=true '
    - '------------INS BooleanLiteral@@true @TO@ Assignment@@done=true '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@int seconds=val.get(Calendar.SECOND); @TO@
      MethodDeclaration@@private, static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int seconds=val.get(Calendar.SECOND); '
    - '---INS VariableDeclarationFragment@@seconds=val.get(Calendar.SECOND) @TO@ VariableDeclarationStatement@@int
      seconds=val.get(Calendar.SECOND); '
    - '------INS SimpleName@@seconds @TO@ VariableDeclarationFragment@@seconds=val.get(Calendar.SECOND) '
    - '------INS MethodInvocation@@val.get(Calendar.SECOND) @TO@ VariableDeclarationFragment@@seconds=val.get(Calendar.SECOND) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.get(Calendar.SECOND) '
    - '---------INS SimpleName@@MethodName:get:[Calendar.SECOND] @TO@ MethodInvocation@@val.get(Calendar.SECOND) '
    - '------------INS QualifiedName@@Calendar.SECOND @TO@ SimpleName@@MethodName:get:[Calendar.SECOND] '
    - '---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.SECOND '
    - '---------------INS SimpleName@@SECOND @TO@ QualifiedName@@Calendar.SECOND '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:!done && (!round || seconds < 30) @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@!done && (!round || seconds < 30) @TO@ IfStatement@@InfixExpression:!done
      && (!round || seconds < 30) '
    - '------INS PrefixExpression@@!done @TO@ InfixExpression@@!done && (!round ||
      seconds < 30) '
    - '---------INS Operator@@! @TO@ PrefixExpression@@!done '
    - '---------INS SimpleName@@done @TO@ PrefixExpression@@!done '
    - '------INS Operator@@&& @TO@ InfixExpression@@!done && (!round || seconds <
      30) '
    - '------INS ParenthesizedExpression@@(!round || seconds < 30) @TO@ InfixExpression@@!done
      && (!round || seconds < 30) '
    - '---------INS InfixExpression@@!round || seconds < 30 @TO@ ParenthesizedExpression@@(!round
      || seconds < 30) '
    - '------------INS PrefixExpression@@!round @TO@ InfixExpression@@!round || seconds
      < 30 '
    - '---------------INS Operator@@! @TO@ PrefixExpression@@!round '
    - '---------------INS SimpleName@@round @TO@ PrefixExpression@@!round '
    - '------------INS Operator@@|| @TO@ InfixExpression@@!round || seconds < 30 '
    - '------------INS InfixExpression@@seconds < 30 @TO@ InfixExpression@@!round
      || seconds < 30 '
    - '---------------INS SimpleName@@seconds @TO@ InfixExpression@@seconds < 30 '
    - '---------------INS Operator@@< @TO@ InfixExpression@@seconds < 30 '
    - '---------------INS NumberLiteral@@30 @TO@ InfixExpression@@seconds < 30 '
    - '---INS ExpressionStatement@@Assignment:time=time - (seconds * 1000L) @TO@ IfStatement@@InfixExpression:!done
      && (!round || seconds < 30) '
    - '------INS Assignment@@time=time - (seconds * 1000L) @TO@ ExpressionStatement@@Assignment:time=time
      - (seconds * 1000L) '
    - '---------INS SimpleName@@time @TO@ Assignment@@time=time - (seconds * 1000L) '
    - '---------INS Operator@@= @TO@ Assignment@@time=time - (seconds * 1000L) '
    - '---------INS InfixExpression@@time - (seconds * 1000L) @TO@ Assignment@@time=time
      - (seconds * 1000L) '
    - '------------INS SimpleName@@time @TO@ InfixExpression@@time - (seconds * 1000L) '
    - '------------INS Operator@@- @TO@ InfixExpression@@time - (seconds * 1000L) '
    - '------------INS ParenthesizedExpression@@(seconds * 1000L) @TO@ InfixExpression@@time
      - (seconds * 1000L) '
    - '---------------INS InfixExpression@@seconds * 1000L @TO@ ParenthesizedExpression@@(seconds
      * 1000L) '
    - '------------------INS SimpleName@@seconds @TO@ InfixExpression@@seconds * 1000L '
    - '------------------INS Operator@@* @TO@ InfixExpression@@seconds * 1000L '
    - '------------------INS NumberLiteral@@1000L @TO@ InfixExpression@@seconds *
      1000L '
    - '---INS IfStatement@@InfixExpression:field == Calendar.MINUTE @TO@ IfStatement@@InfixExpression:!done
      && (!round || seconds < 30) '
    - '------INS InfixExpression@@field == Calendar.MINUTE @TO@ IfStatement@@InfixExpression:field
      == Calendar.MINUTE '
    - '---------INS SimpleName@@field @TO@ InfixExpression@@field == Calendar.MINUTE '
    - '---------INS Operator@@== @TO@ InfixExpression@@field == Calendar.MINUTE '
    - '---------INS QualifiedName@@Calendar.MINUTE @TO@ InfixExpression@@field ==
      Calendar.MINUTE '
    - '------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MINUTE '
    - '------------INS SimpleName@@MINUTE @TO@ QualifiedName@@Calendar.MINUTE '
    - '------INS ExpressionStatement@@Assignment:done=true @TO@ IfStatement@@InfixExpression:field
      == Calendar.MINUTE '
    - '---------INS Assignment@@done=true @TO@ ExpressionStatement@@Assignment:done=true '
    - '------------INS SimpleName@@done @TO@ Assignment@@done=true '
    - '------------INS Operator@@= @TO@ Assignment@@done=true '
    - '------------INS BooleanLiteral@@true @TO@ Assignment@@done=true '
  - !yamlable/myyaml.Action
    lines:
    - 'INS VariableDeclarationStatement@@int minutes=val.get(Calendar.MINUTE); @TO@
      MethodDeclaration@@private, static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS PrimitiveType@@int @TO@ VariableDeclarationStatement@@int minutes=val.get(Calendar.MINUTE); '
    - '---INS VariableDeclarationFragment@@minutes=val.get(Calendar.MINUTE) @TO@ VariableDeclarationStatement@@int
      minutes=val.get(Calendar.MINUTE); '
    - '------INS SimpleName@@minutes @TO@ VariableDeclarationFragment@@minutes=val.get(Calendar.MINUTE) '
    - '------INS MethodInvocation@@val.get(Calendar.MINUTE) @TO@ VariableDeclarationFragment@@minutes=val.get(Calendar.MINUTE) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.get(Calendar.MINUTE) '
    - '---------INS SimpleName@@MethodName:get:[Calendar.MINUTE] @TO@ MethodInvocation@@val.get(Calendar.MINUTE) '
    - '------------INS QualifiedName@@Calendar.MINUTE @TO@ SimpleName@@MethodName:get:[Calendar.MINUTE] '
    - '---------------INS SimpleName@@Calendar @TO@ QualifiedName@@Calendar.MINUTE '
    - '---------------INS SimpleName@@MINUTE @TO@ QualifiedName@@Calendar.MINUTE '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:!done && (!round || minutes < 30) @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@!done && (!round || minutes < 30) @TO@ IfStatement@@InfixExpression:!done
      && (!round || minutes < 30) '
    - '------INS PrefixExpression@@!done @TO@ InfixExpression@@!done && (!round ||
      minutes < 30) '
    - '---------INS Operator@@! @TO@ PrefixExpression@@!done '
    - '---------INS SimpleName@@done @TO@ PrefixExpression@@!done '
    - '------INS Operator@@&& @TO@ InfixExpression@@!done && (!round || minutes <
      30) '
    - '------INS ParenthesizedExpression@@(!round || minutes < 30) @TO@ InfixExpression@@!done
      && (!round || minutes < 30) '
    - '---------INS InfixExpression@@!round || minutes < 30 @TO@ ParenthesizedExpression@@(!round
      || minutes < 30) '
    - '------------INS PrefixExpression@@!round @TO@ InfixExpression@@!round || minutes
      < 30 '
    - '---------------INS Operator@@! @TO@ PrefixExpression@@!round '
    - '---------------INS SimpleName@@round @TO@ PrefixExpression@@!round '
    - '------------INS Operator@@|| @TO@ InfixExpression@@!round || minutes < 30 '
    - '------------INS InfixExpression@@minutes < 30 @TO@ InfixExpression@@!round
      || minutes < 30 '
    - '---------------INS SimpleName@@minutes @TO@ InfixExpression@@minutes < 30 '
    - '---------------INS Operator@@< @TO@ InfixExpression@@minutes < 30 '
    - '---------------INS NumberLiteral@@30 @TO@ InfixExpression@@minutes < 30 '
    - '---INS ExpressionStatement@@Assignment:time=time - (minutes * 60000L) @TO@
      IfStatement@@InfixExpression:!done && (!round || minutes < 30) '
    - '------INS Assignment@@time=time - (minutes * 60000L) @TO@ ExpressionStatement@@Assignment:time=time
      - (minutes * 60000L) '
    - '---------INS SimpleName@@time @TO@ Assignment@@time=time - (minutes * 60000L) '
    - '---------INS Operator@@= @TO@ Assignment@@time=time - (minutes * 60000L) '
    - '---------INS InfixExpression@@time - (minutes * 60000L) @TO@ Assignment@@time=time
      - (minutes * 60000L) '
    - '------------INS SimpleName@@time @TO@ InfixExpression@@time - (minutes * 60000L) '
    - '------------INS Operator@@- @TO@ InfixExpression@@time - (minutes * 60000L) '
    - '------------INS ParenthesizedExpression@@(minutes * 60000L) @TO@ InfixExpression@@time
      - (minutes * 60000L) '
    - '---------------INS InfixExpression@@minutes * 60000L @TO@ ParenthesizedExpression@@(minutes
      * 60000L) '
    - '------------------INS SimpleName@@minutes @TO@ InfixExpression@@minutes * 60000L '
    - '------------------INS Operator@@* @TO@ InfixExpression@@minutes * 60000L '
    - '------------------INS NumberLiteral@@60000L @TO@ InfixExpression@@minutes *
      60000L '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:date.getTime() != time @TO@ MethodDeclaration@@private,
      static, @@void, MethodName:modify, @@Argus:Calendar+val+int+field+boolean+round+ '
    - '---INS InfixExpression@@date.getTime() != time @TO@ IfStatement@@InfixExpression:date.getTime()
      != time '
    - '------INS MethodInvocation@@date.getTime() @TO@ InfixExpression@@date.getTime()
      != time '
    - '---------INS SimpleName@@Name:date @TO@ MethodInvocation@@date.getTime() '
    - '---------INS SimpleName@@MethodName:getTime:[] @TO@ MethodInvocation@@date.getTime() '
    - '------INS Operator@@!= @TO@ InfixExpression@@date.getTime() != time '
    - '------INS SimpleName@@time @TO@ InfixExpression@@date.getTime() != time '
    - '---INS ExpressionStatement@@MethodInvocation:date.setTime(time) @TO@ IfStatement@@InfixExpression:date.getTime()
      != time '
    - '------INS MethodInvocation@@date.setTime(time) @TO@ ExpressionStatement@@MethodInvocation:date.setTime(time) '
    - '---------INS SimpleName@@Name:date @TO@ MethodInvocation@@date.setTime(time) '
    - '---------INS SimpleName@@MethodName:setTime:[time] @TO@ MethodInvocation@@date.setTime(time) '
    - '------------INS SimpleName@@time @TO@ SimpleName@@MethodName:setTime:[time] '
    - '---INS ExpressionStatement@@MethodInvocation:val.setTime(date) @TO@ IfStatement@@InfixExpression:date.getTime()
      != time '
    - '------INS MethodInvocation@@val.setTime(date) @TO@ ExpressionStatement@@MethodInvocation:val.setTime(date) '
    - '---------INS SimpleName@@Name:val @TO@ MethodInvocation@@val.setTime(date) '
    - '---------INS SimpleName@@MethodName:setTime:[date] @TO@ MethodInvocation@@val.setTime(date) '
    - '------------INS SimpleName@@date @TO@ SimpleName@@MethodName:setTime:[date] '
  - !yamlable/myyaml.Action
    lines:
    - 'INS IfStatement@@InfixExpression:offset != 0 @TO@ ForStatement@@[int i=0];i
      < fields.length; [i++] '
    - '---MOV ExpressionStatement@@MethodInvocation:val.set(fields[i][0],val.get(fields[i][0])
      - offset) @TO@ IfStatement@@InfixExpression:offset != 0 '
    - '---INS InfixExpression@@offset != 0 @TO@ IfStatement@@InfixExpression:offset
      != 0 '
    - '------INS SimpleName@@offset @TO@ InfixExpression@@offset != 0 '
    - '------INS Operator@@!= @TO@ InfixExpression@@offset != 0 '
    - '------INS NumberLiteral@@0 @TO@ InfixExpression@@offset != 0 '
  repair_actions_cnt: 12
