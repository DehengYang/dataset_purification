1 bug_id: Closure-67
2 src folder:
  name of src folder: src
  number of files: 404
  number of java files: 391
  number of src classes: 1272
  number of test classes: 208
3 test (cases):
  failing test cases:
  - com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest#testAliasing7
  failing tests:
  - com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest
  number of all test cases: 7070
  number of failing test cases: 1
4 time cost of purification:
  coverage on buggy version: 1.0
  coverage on fixed version: 2.0
  purification via coverage: 0.931
  purification via delta debugging: 131.917
  repair actions extraction: 1.173
5 stmts covered by failing cases:
  buggy:
    com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest#testAliasing7: 3086
  fixed:
    com.google.javascript.jscomp.RemoveUnusedPrototypePropertiesTest#testAliasing7: 2974
6 reduced lines:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  covAdd: 1
  covDel: 1
  cov_patch_lines: 2
  delta_patch_lines: 2
  oriAdd: 1
  oriDel: 1
  ori_patch_lines: 2
  purAdd: 1
  purDel: 1
7 reduced chunks:
  by all: 0
  by coverage: 0
  by delta debugging: 0
  cov: 1
  original: 1
  purifiy: 1
8 mutants by delta debugging:
  failAll: 0
  failCompile: 2
  failFail: 0
  passed: 0
  total: 2
9 sibling repair actions: []
10 patch:
  original: "--- /mnt/purify/repairDir/Purify_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t\
    2020-10-23 08:17:43.581424725 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Closure_67/purify/patch/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t\
    2020-10-23 08:17:43.581424725 -0400\n@@ -315,7 +315,7 @@\n       Node n = assign.getFirstChild();\n\
    \       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n        \
    \   && n.getType() == Token.GETPROP\n-          ) {\n+          && assign.getParent().getType()\
    \ == Token.EXPR_RESULT) {\n         // We want to exclude the assignment itself\
    \ from the usage list\n         boolean isChainedProperty =\n             n.getFirstChild().getType()\
    \ == Token.GETPROP;"
  purified: "--- /mnt/purify/repairDir/Purify_Defects4J_Closure_67/src/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t\
    2020-10-23 08:20:21.397994268 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Closure_67/purify/purified/com/google/javascript/jscomp/AnalyzePrototypeProperties.java\t\
    2020-10-23 08:20:21.397994268 -0400\n@@ -315,7 +315,7 @@\n       Node n = assign.getFirstChild();\n\
    \       if (n != null && NodeUtil.isVarOrSimpleAssignLhs(n, assign)\n        \
    \   && n.getType() == Token.GETPROP\n-          ) {\n+          && assign.getParent().getType()\
    \ == Token.EXPR_RESULT) {\n         // We want to exclude the assignment itself\
    \ from the usage list\n         boolean isChainedProperty =\n             n.getFirstChild().getType()\
    \ == Token.GETPROP;"
11 repair actions: {}
12 ori_repair_actions:
  biggest_depth: 5
  classes_cnt: '1'
  com/google/javascript/jscomp/AnalyzePrototypeProperties:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD IfStatement@@InfixExpression:n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP @TO@ InfixExpression:n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '---INS InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT
      @TO@ IfStatement@@InfixExpression:n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP '
    - '------MOV InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP @TO@ InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '------INS Operator@@&& @TO@ InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '------INS InfixExpression@@assign.getParent().getType() == Token.EXPR_RESULT
      @TO@ InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '---------INS MethodInvocation@@assign.getParent().getType() @TO@ InfixExpression@@assign.getParent().getType()
      == Token.EXPR_RESULT '
    - '------------INS SimpleName@@Name:assign @TO@ MethodInvocation@@assign.getParent().getType() '
    - '------------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@assign.getParent().getType() '
    - '------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@assign.getParent().getType() '
    - '---------INS Operator@@== @TO@ InfixExpression@@assign.getParent().getType()
      == Token.EXPR_RESULT '
    - '---------INS QualifiedName@@Token.EXPR_RESULT @TO@ InfixExpression@@assign.getParent().getType()
      == Token.EXPR_RESULT '
    - '------------INS SimpleName@@Token @TO@ QualifiedName@@Token.EXPR_RESULT '
    - '------------INS SimpleName@@EXPR_RESULT @TO@ QualifiedName@@Token.EXPR_RESULT '
  files_cnt: '1'
  repair_actions_cnt: 1
13 purify_repair_actions:
  biggest_depth: 5
  classes_cnt: '1'
  com/google/javascript/jscomp/AnalyzePrototypeProperties:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD IfStatement@@InfixExpression:n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP @TO@ InfixExpression:n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '---INS InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT
      @TO@ IfStatement@@InfixExpression:n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP '
    - '------MOV InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP @TO@ InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '------INS Operator@@&& @TO@ InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '------INS InfixExpression@@assign.getParent().getType() == Token.EXPR_RESULT
      @TO@ InfixExpression@@n != null && NodeUtil.isVarOrSimpleAssignLhs(n,assign)
      && n.getType() == Token.GETPROP && assign.getParent().getType() == Token.EXPR_RESULT '
    - '---------INS MethodInvocation@@assign.getParent().getType() @TO@ InfixExpression@@assign.getParent().getType()
      == Token.EXPR_RESULT '
    - '------------INS SimpleName@@Name:assign @TO@ MethodInvocation@@assign.getParent().getType() '
    - '------------INS MethodInvocation@@MethodName:getParent:[] @TO@ MethodInvocation@@assign.getParent().getType() '
    - '------------INS SimpleName@@MethodName:getType:[] @TO@ MethodInvocation@@assign.getParent().getType() '
    - '---------INS Operator@@== @TO@ InfixExpression@@assign.getParent().getType()
      == Token.EXPR_RESULT '
    - '---------INS QualifiedName@@Token.EXPR_RESULT @TO@ InfixExpression@@assign.getParent().getType()
      == Token.EXPR_RESULT '
    - '------------INS SimpleName@@Token @TO@ QualifiedName@@Token.EXPR_RESULT '
    - '------------INS SimpleName@@EXPR_RESULT @TO@ QualifiedName@@Token.EXPR_RESULT '
  files_cnt: '1'
  repair_actions_cnt: 1
