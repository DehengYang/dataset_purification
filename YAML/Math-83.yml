1 bug_id: Math-83
2 src folder:
  name of src folder: java
  number of files: 425
  number of java files: 388
  number of src classes: 477
  number of test classes: 215
3 test (cases):
  failing test cases:
  - org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286
  failing tests:
  - org.apache.commons.math.optimization.linear.SimplexSolverTest
  number of all test cases: 2055
  number of failing test cases: 1
4 time cost of purification:
  coverage on buggy version: 4.0
  coverage on fixed version: 1.0
  purification via coverage: 0.002
  purification via delta debugging: 159.873
  repair actions extraction: 1.174
5 stmts covered by failing cases:
  buggy:
    org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286: 275
  fixed:
    org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286: 275
6 reduced lines:
  by all: 2
  by coverage: 0
  by delta debugging: 2
  covAdd: 3
  covDel: 3
  cov_patch_lines: 6
  delta_patch_lines: 4
  oriAdd: 3
  oriDel: 3
  ori_patch_lines: 6
  purAdd: 2
  purDel: 2
7 reduced chunks:
  by all: 1
  by coverage: 0
  by delta debugging: 1
  cov: 3
  original: 3
  purifiy: 2
8 mutants by delta debugging:
  failAll: 0
  failCompile: 10
  failFail: 1
  passed: 1
  total: 12
9 sibling repair actions: []
10 patch:
  original: "--- /mnt/purify/repairDir/Purify_Defects4J_Math_83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\t\
    2020-10-21 13:41:42.296662653 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_83/purify/patch/org/apache/commons/math/optimization/linear/SimplexTableau.java\t\
    2020-10-21 13:41:42.292662537 -0400\n@@ -289,7 +289,7 @@\n      */\n     private\
    \ Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {\n        \
    \ Integer row = null;\n-        int start = getNumObjectiveFunctions();\n+   \
    \     int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;\n    \
    \     for (int i = start; i < getHeight(); i++) {\n             if (MathUtils.equals(getEntry(i,\
    \ col), 1.0, epsilon) && (row == null)) {\n                 row = i;\n@@ -338,11\
    \ +338,11 @@\n      */\n     protected RealPointValuePair getSolution() {\n  \
    \     double[] coefficients = new double[getOriginalNumDecisionVariables()];\n\
    -      Integer negativeVarBasicRow = getBasicRow(getNegativeDecisionVariableOffset());\n\
    +      Integer negativeVarBasicRow = getBasicRowForSolution(getNegativeDecisionVariableOffset());\n\
    \       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow,\
    \ getRhsOffset());\n       Set<Integer> basicRows = new HashSet<Integer>();\n\
    \       for (int i = 0; i < coefficients.length; i++) {\n-          Integer basicRow\
    \ = getBasicRow(getNumObjectiveFunctions() + i);\n+          Integer basicRow\
    \ = getBasicRowForSolution(getNumObjectiveFunctions() + i);\n           if (basicRows.contains(basicRow))\
    \ {\n               // if multiple variables can take a given value \n       \
    \        // then we choose the first and set the rest equal to 0"
  purified: "--- /mnt/purify/repairDir/Purify_Defects4J_Math_83/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau.java\t\
    2020-10-21 13:44:37.437727012 -0400\n+++ /mnt/purify/buggylocs/Defects4J/Defects4J_Math_83/purify/purified/org/apache/commons/math/optimization/linear/SimplexTableau.java\t\
    2020-10-21 13:44:37.437727012 -0400\n@@ -289,7 +289,7 @@\n      */\n     private\
    \ Integer getBasicRow(final int col, boolean ignoreObjectiveRows) {\n        \
    \ Integer row = null;\n-        int start = getNumObjectiveFunctions();\n+   \
    \     int start = ignoreObjectiveRows ? getNumObjectiveFunctions() : 0;\n    \
    \     for (int i = start; i < getHeight(); i++) {\n             if (MathUtils.equals(getEntry(i,\
    \ col), 1.0, epsilon) && (row == null)) {\n                 row = i;\n@@ -342,7\
    \ +342,7 @@\n       double mostNegative = negativeVarBasicRow == null ? 0 : getEntry(negativeVarBasicRow,\
    \ getRhsOffset());\n       Set<Integer> basicRows = new HashSet<Integer>();\n\
    \       for (int i = 0; i < coefficients.length; i++) {\n-          Integer basicRow\
    \ = getBasicRow(getNumObjectiveFunctions() + i);\n+          Integer basicRow\
    \ = getBasicRowForSolution(getNumObjectiveFunctions() + i);\n           if (basicRows.contains(basicRow))\
    \ {\n               // if multiple variables can take a given value \n       \
    \        // then we choose the first and set the rest equal to 0"
11 repair actions: {}
12 ori_repair_actions:
  biggest_depth: 4
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/math/optimization/linear/SimplexTableau:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD VariableDeclarationStatement@@int start=getNumObjectiveFunctions(); @TO@
      int start=ignoreObjectiveRows ? getNumObjectiveFunctions() : 0; '
    - '---UPD VariableDeclarationFragment@@start=getNumObjectiveFunctions() @TO@ start=ignoreObjectiveRows
      ? getNumObjectiveFunctions() : 0 '
    - '------INS ConditionalExpression@@ignoreObjectiveRows ? getNumObjectiveFunctions()
      : 0 @TO@ VariableDeclarationFragment@@start=getNumObjectiveFunctions() '
    - '---------INS SimpleName@@ignoreObjectiveRows @TO@ ConditionalExpression@@ignoreObjectiveRows
      ? getNumObjectiveFunctions() : 0 '
    - '---------INS MethodInvocation@@MethodName:getNumObjectiveFunctions:[] @TO@
      ConditionalExpression@@ignoreObjectiveRows ? getNumObjectiveFunctions() : 0 '
    - '---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@ignoreObjectiveRows
      ? getNumObjectiveFunctions() : 0 '
    - '------DEL MethodInvocation@@MethodName:getNumObjectiveFunctions:[] '
  - !yamlable/myyaml.Action
    lines:
    - 'UPD VariableDeclarationStatement@@Integer negativeVarBasicRow=getBasicRow(getNegativeDecisionVariableOffset());
      @TO@ Integer negativeVarBasicRow=getBasicRowForSolution(getNegativeDecisionVariableOffset()); '
    - '---UPD VariableDeclarationFragment@@negativeVarBasicRow=getBasicRow(getNegativeDecisionVariableOffset())
      @TO@ negativeVarBasicRow=getBasicRowForSolution(getNegativeDecisionVariableOffset()) '
    - '------UPD MethodInvocation@@getBasicRow(getNegativeDecisionVariableOffset())
      @TO@ getBasicRowForSolution(getNegativeDecisionVariableOffset()) '
    - '---------UPD SimpleName@@MethodName:getBasicRow:[getNegativeDecisionVariableOffset()]
      @TO@ MethodName:getBasicRowForSolution:[getNegativeDecisionVariableOffset()] '
  - !yamlable/myyaml.Action
    lines:
    - 'UPD VariableDeclarationStatement@@Integer basicRow=getBasicRow(getNumObjectiveFunctions()
      + i); @TO@ Integer basicRow=getBasicRowForSolution(getNumObjectiveFunctions()
      + i); '
    - '---UPD VariableDeclarationFragment@@basicRow=getBasicRow(getNumObjectiveFunctions()
      + i) @TO@ basicRow=getBasicRowForSolution(getNumObjectiveFunctions() + i) '
    - '------UPD MethodInvocation@@getBasicRow(getNumObjectiveFunctions() + i) @TO@
      getBasicRowForSolution(getNumObjectiveFunctions() + i) '
    - '---------UPD SimpleName@@MethodName:getBasicRow:[getNumObjectiveFunctions()
      + i] @TO@ MethodName:getBasicRowForSolution:[getNumObjectiveFunctions() + i] '
  repair_actions_cnt: 3
13 purify_repair_actions:
  biggest_depth: 4
  classes_cnt: '1'
  files_cnt: '1'
  org/apache/commons/math/optimization/linear/SimplexTableau:
  - !yamlable/myyaml.Action
    lines:
    - 'UPD VariableDeclarationStatement@@int start=getNumObjectiveFunctions(); @TO@
      int start=ignoreObjectiveRows ? getNumObjectiveFunctions() : 0; '
    - '---UPD VariableDeclarationFragment@@start=getNumObjectiveFunctions() @TO@ start=ignoreObjectiveRows
      ? getNumObjectiveFunctions() : 0 '
    - '------INS ConditionalExpression@@ignoreObjectiveRows ? getNumObjectiveFunctions()
      : 0 @TO@ VariableDeclarationFragment@@start=getNumObjectiveFunctions() '
    - '---------INS SimpleName@@ignoreObjectiveRows @TO@ ConditionalExpression@@ignoreObjectiveRows
      ? getNumObjectiveFunctions() : 0 '
    - '---------INS MethodInvocation@@MethodName:getNumObjectiveFunctions:[] @TO@
      ConditionalExpression@@ignoreObjectiveRows ? getNumObjectiveFunctions() : 0 '
    - '---------INS NumberLiteral@@0 @TO@ ConditionalExpression@@ignoreObjectiveRows
      ? getNumObjectiveFunctions() : 0 '
    - '------DEL MethodInvocation@@MethodName:getNumObjectiveFunctions:[] '
  - !yamlable/myyaml.Action
    lines:
    - 'UPD VariableDeclarationStatement@@Integer basicRow=getBasicRow(getNumObjectiveFunctions()
      + i); @TO@ Integer basicRow=getBasicRowForSolution(getNumObjectiveFunctions()
      + i); '
    - '---UPD VariableDeclarationFragment@@basicRow=getBasicRow(getNumObjectiveFunctions()
      + i) @TO@ basicRow=getBasicRowForSolution(getNumObjectiveFunctions() + i) '
    - '------UPD MethodInvocation@@getBasicRow(getNumObjectiveFunctions() + i) @TO@
      getBasicRowForSolution(getNumObjectiveFunctions() + i) '
    - '---------UPD SimpleName@@MethodName:getBasicRow:[getNumObjectiveFunctions()
      + i] @TO@ MethodName:getBasicRowForSolution:[getNumObjectiveFunctions() + i] '
  repair_actions_cnt: 2
